description = "Acceptance Tests for the BDD cycle (objective: have conversaions and demonstrate requirements)"

test {

    // make gradle print the test result for each test in the build (we like to see the acceptance tests running)
    testLogging {
        events "passed", "skipped", "failed"
    }

    // set the output folder for the acceptance tests that use yatspec, and print the full path after the test execution
    systemProperty "yatspec.output.dir", "build/reports/yatspec"
    doLast {
        println "==========================================================================================="
        println "Acceptance tests output: ${project.buildDir.absolutePath}/reports/yatspec/com/yarpg"
        println "==========================================================================================="
    }
}

// we want to run the acceptance tests after the unit tests, to follow the testing pyramid
test.mustRunAfter(
        ":application:yarpg-configuration:test",
        ":application:yarpg-core:test",
        ":application:yarpg-dataproviders:test",
        ":application:yarpg-entrypoints:test"
)

// we must copy the h2-schema.sql script into the resources folder of this module in order for the tests
// to be able to create the in-memory database successfull when initialising the connection
task copyTestResources(type: Copy) {
    println "Copying resource"
    from "${project(':application:yarpg-dataproviders').buildDir}/main/resources/h2-schema.sql"
    into "${buildDir}/resources/test"
}
processTestResources.dependsOn copyTestResources

dependencies {
    compile project(":application:yarpg-configuration")
    compile libs.unit_tests
    compile libs.acceptance_tests
    compile libs.end_to_end_test

    testCompile libs.string_utils
}